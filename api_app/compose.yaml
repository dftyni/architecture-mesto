version: '3'

services:
  configSrv:
    image: mongo:4.4
    container_name: configSrv
    restart: unless-stopped
    ports:
      - 127.0.10.10:27017:27017
    networks:
      - "app-network"
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet", "config_server",
        "--bind_ip_all",
        "--port", "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  shard1:
    image: mongo:4.4
    container_name: shard1
    restart: unless-stopped
    ports:
      - 127.0.10.9:27018:27018
    networks:
      - "app-network"
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard1",
        "--bind_ip_all",
        "--port", "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  shard2:
    image: mongo:4.4
    container_name: shard2
    restart: unless-stopped
    ports:
      - 127.0.10.8:27019:27019
    networks:
      - "app-network"
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet", "shard2",
        "--bind_ip_all",
        "--port", "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  mongos_router:
    image: mongo:4.4
    container_name: mongos_router
    restart: unless-stopped
    ports:
      - 127.0.10.7:27020:27020
    networks:
      - "app-network"
    command:
      [
        "mongos",
        "--configdb", "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port", "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  app-network:
    driver: bridge

volumes:
  config-data:
  shard1-data:
  shard2-data: