version: '3'
services:
  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  masterA:
    container_name: masterA
    image: mongo:latest
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - masterA-data:/data/db
    command:
     [
       "--shardsvr",
       "--replSet",
       "masterA",
       "--bind_ip_all",
       "--port",
       "27018"
     ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    
  masterB:
    container_name: masterB
    image: mongo:latest
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - masterB-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "masterB",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s
    
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: ["CMD","mongo","--eval","db.adminCommand('ping')"]
      interval: 5s
      start_period: 10s

  mongo-sharding:
    container_name: mongo-sharding
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://mongos_router:27020"]
      interval: 30s
      retries: 5
    networks:
      app-network:
        ipv4_address: 173.17.0.20

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  masterA-data:
  masterB-data:
  mongo-sharding: