name: mongo-sharding

x-common: &commonSettings
  image: mongo:latest
  restart: always
  networks:
    app-network:
  healthcheck:
    interval: 5s
    start_period: 10s

services:
  # app server
  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on: [mongos_router]
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

  # config server
  configSrv:
    <<: *commonSettings
    container_name: configSrv
    hostname: configSrv
    ports:
      - 27017:27017
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "mongod",
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]

  # router
  mongos_router:
    <<: *commonSettings
    container_name: mongos_router
    ports:
      - 27020:27020
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - router-data:/data/db
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27020" ]

  # shard 1
  shard1:
    <<: *commonSettings
    container_name: shard1
    hostname: shard1
    ports:
      - 27018:27018
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27018" ]

  # shard 2
  shard2:
    <<: *commonSettings
    container_name: shard2
    hostname: shard2
    ports:
      - 27019:27019
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27019" ]

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  router-data:
  shard1-data:
  shard2-data: