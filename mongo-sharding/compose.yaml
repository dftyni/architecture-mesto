name: mongo-sharding

services:
  configSrv:
    image: mongo:latest
    container_name: configSrv 
    restart: on-failure
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: on-failure
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh shard1:27018/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: on-failure
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all", 
        "--port",
        "27019"
      ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh shard2:27019/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
  
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: on-failure
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongos_router:27020/test --quiet
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data:
 