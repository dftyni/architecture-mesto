version: '3.8'

services:
  # Конфигурационный сервер (config server replica set)
  mongodb-config:
    image: mongo:latest
    container_name: mongodb-config
    command: mongod --configsvr --replSet rs-config --bind_ip_all
    ports:
      - "27019:27019"
    volumes:
      - mongodb-config-data:/data/configdb
    networks:
      - mongodb-network

  # Сервер запросов (mongos router)
  mongodb-router:
    image: mongo:latest
    container_name: mongodb-router
    command: mongos --configdb rs-config/mongodb-config:27019 --bind_ip_all
    ports:
      - "27017:27017"
    depends_on:
      - mongodb-config
    volumes:
      - mongodb-router-data:/data/db
    networks:
      - mongodb-network

  # Шард 1 (replica set)
  mongodb-shard1:
    image: mongo:latest
    container_name: mongodb-shard1
    command: mongod --shardsvr --replSet rs-shard1 --bind_ip_all
    ports:
      - "27018:27018"
    volumes:
      - mongodb-shard1-data:/data/db
    networks:
      - mongodb-network

  # Шард 2 (replica set)
  mongodb-shard2:
    image: mongo:latest
    container_name: mongodb-shard2
    command: mongod --shardsvr --replSet rs-shard2 --bind_ip_all
    ports:
      - "27020:27018"
    volumes:
      - mongodb-shard2-data:/data/db
    networks:
      - mongodb-network

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongodb-router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongodb-router:27017"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      - mongodb-network

volumes:
  mongodb-config-data:
  mongodb-router-data:
  mongodb-shard1-data:
  mongodb-shard2-data:

networks:
  mongodb-network:
    driver: bridge
