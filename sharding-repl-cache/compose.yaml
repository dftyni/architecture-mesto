services:
  configSrv:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: configSrv 
    restart: always
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27019"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_r0:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1_r0
    restart: always
    volumes:
      - shard1_r0-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_r1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1_r1
    restart: always
    volumes:
      - shard1_r1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard1_r2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard1_r2
    restart: always
    volumes:
      - shard1_r2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_r0:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2_r0 
    restart: always
    volumes:
      - shard2_r0-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_r1:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2_r1
    restart: always
    volumes:
      - shard2_r1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard2_r2:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: shard2_r2
    restart: always
    volumes:
      - shard2_r2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongos_router
    restart: always
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv:27019",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  redis_1:
    container_name: redis_1
    image: "redis:latest"
    volumes:
      - redis_1_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv
      - shard1_r0
      - shard1_r1
      - shard1_r2
      - shard2_r0
      - shard2_r1
      - shard2_r2
      - mongos_router
      - redis_1
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis_1"

volumes:
  config-data:
  shard1_r0-data:
  shard1_r1-data:
  shard1_r2-data:
  shard2_r0-data:
  shard2_r1-data:
  shard2_r2-data:
  redis_1_data: {}