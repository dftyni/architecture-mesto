services:
  mongo_config_server:
    image: mongo:latest
    container_name: mongo_config_server
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - config-data:/data/db
    command: [
      "--configsvr",
      "--replSet",
      "config_server",
      "--bind_ip_all",
      "--port",
      "27017"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    command: [
      "mongos",
      "--configdb",
      "config_server/mongo_config_server:27017",
      "--bind_ip_all",
      "--port",
      "27020"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    volumes:
      - shard1_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard1",
      "--bind_ip_all",
      "--port",
      "27018"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard1_0:
    image: mongo:latest
    container_name: shard1_0
    restart: always
    ports:
      - "27021:27021"
    volumes:
      - shard1_0_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard1",
      "--bind_ip_all",
      "--port",
      "27021"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard1_1:
    image: mongo:latest
    container_name: shard1_1
    restart: always
    ports:
      - "27022:27022"
    volumes:
      - shard1_1_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard1",
      "--bind_ip_all",
      "--port",
      "27022"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    volumes:
      - shard2_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard2",
      "--bind_ip_all",
      "--port",
      "27019"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard2_0:
    image: mongo:latest
    container_name: shard2_0
    restart: always
    ports:
      - "27023:27023"
    volumes:
      - shard2_0_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard2",
      "--bind_ip_all",
      "--port",
      "27023"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  shard2_1:
    image: mongo:latest
    container_name: shard2_1
    restart: always
    ports:
      - "27024:27024"
    volumes:
      - shard2_1_data_container:/data/db
    command: [
      "--shardsvr",
      "--replSet",
      "shard2",
      "--bind_ip_all",
      "--port",
      "27024"
    ]
    healthcheck:
      test: [
        "CMD",
        "mongo",
        "--eval",
        "db.adminCommand('ping')"
      ]
      interval: 5s
      start_period: 10s

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: [
      "redis-server",
      "/usr/local/etc/redis/redis.conf"
    ]

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
    ports:
      - "8080:8080"
    environment:
      REDIS_URL: "redis://redis:6379"
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

volumes:
  config-data:
  shard1_data_container:
  shard1_0_data_container:
  shard1_1_data_container:
  shard2_data_container:
  shard2_0_data_container:
  shard2_1_data_container:
  redis_data: