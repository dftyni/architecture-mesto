name: mongo-sharding-repl

services:

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongoRouter
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    environment:
      MONGODB_URL: "mongodb://mongoRouter:27026"
      MONGODB_DATABASE_NAME: "somedb"

  mongoConfigSrv:
    image: mongo:latest
    container_name: mongoConfigSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    volumes:
      - mongo-config-srv-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "mongoConfigSrv",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard1Primary:
    image: mongo:latest
    container_name: mongoShard1Primary
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    volumes:
      - mongo-shard1-primary-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "mongoShard1Rs",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard1Repl1:
    image: mongo:latest
    container_name: mongoShard1Repl1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - mongo-shard1-repl1-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard1Rs",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard1Repl2:
    image: mongo:latest
    container_name: mongoShard1Repl2
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - mongo-shard1-repl2-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard1Rs",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard1Repl3:
    image: mongo:latest
    container_name: mongoShard1Repl3
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - mongo-shard1-repl3-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard1Rs",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard2Primary:
    image: mongo:latest
    container_name: mongoShard2Primary
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - mongo-shard2-primary-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "mongoShard2Rs",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard2Repl1:
    image: mongo:latest
    container_name: mongoShard2Repl1
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    volumes:
      - mongo-shard2-repl1-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard2Rs",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard2Repl2:
    image: mongo:latest
    container_name: mongoShard2Repl2
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    volumes:
      - mongo-shard2-repl2-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard2Rs",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoShard2Repl3:
    image: mongo:latest
    container_name: mongoShard2Repl3
    restart: always
    ports:
      - "27025:27025"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - mongo-shard2-repl3-data:/data/db
    command:
      [
        "--replSet",
        "mongoShard2Rs",
        "--bind_ip_all",
        "--port",
        "27025"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongoRouter:
    image: mongo:latest
    container_name: mongoRouter
    restart: always
    ports:
      - "27026:27026"
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    command:
      [
        "mongos",
        "--configdb",
        "mongoConfigSrv/mongoConfigSrv:27017",
        "--bind_ip_all",
        "--port",
        "27026"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  mongo-config-srv-data:
  mongo-shard1-primary-data:
  mongo-shard1-repl1-data:
  mongo-shard1-repl2-data:
  mongo-shard1-repl3-data:
  mongo-shard2-primary-data:
  mongo-shard2-repl1-data:
  mongo-shard2-repl2-data:
  mongo-shard2-repl3-data:
  mongo-shard2-data:
