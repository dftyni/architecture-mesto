services:

  mongo_router:
    container_name: mongo_router
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 172.20.0.17
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/mongo_config_srv:27018",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - mongo_shard1
      - mongo_shard2
      - mongo_shard1_repl
      - mongo_shard2_repl


  mongo_config_srv:
    container_name: mongo_config_srv
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 172.20.0.18
    volumes:
      - mongo-confsrv-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27018"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongo_shard1:
    container_name: mongo_shard1
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 172.20.0.19
    volumes:
      - mongo-shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - mongo_config_srv

  
  mongo_shard2:
    container_name: mongo_shard2
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 172.20.0.20
    volumes:
      - mongo-shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - mongo_config_srv

  mongo_shard1_repl:
    container_name: mongo_shard1_repl
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 172.20.0.21
    volumes:
      - mongo-shard1-repl-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - mongo_config_srv

  
  mongo_shard2_repl:
    container_name: mongo_shard2_repl
    platform: linux/amd64
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 172.20.0.22
    volumes:
      - mongo-shard2-repl-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard2",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
    depends_on:
      - mongo_config_srv

   # APPLICATION. 

  pymongo_api:
    platform: linux/amd64
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    ports:
      - "8080:8080"
    networks:
      app-network:
    environment:
      MONGODB_URL: "mongodb://mongo_router"
      MONGODB_DATABASE_NAME: "somedb"
    depends_on:
      - mongo_router

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  mongo-confsrv-data:
  mongo-shard1-data:
  mongo-shard2-data:
  mongo-shard1-repl-data:
  mongo-shard2-repl-data:
