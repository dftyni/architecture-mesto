name: mongo-sharding-repl
services:

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.18.0.11
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-1:
    image: mongo:latest
    container_name: shard-1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.18.0.12
    volumes:
      - shard-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-1",
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-1-1:
    image: mongo:latest
    container_name: shard-1-1
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.18.0.9
    volumes:
      - shard-1-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-1",
        "--bind_ip_all",
        "--port",
        "27021"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-1-2:
    image: mongo:latest
    container_name: shard-1-2
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.18.0.8
    volumes:
      - shard-1-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-2:
    image: mongo:latest
    container_name: shard-2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.18.0.13
    volumes:
      - shard-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-2",
        "--bind_ip_all",
        "--port",
        "27019"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-2-1:
    image: mongo:latest
    container_name: shard-2-1
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.18.0.7
    volumes:
      - shard-2-1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-2",
        "--bind_ip_all",
        "--port",
        "27023"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  shard-2-2:
    image: mongo:latest
    container_name: shard-2-2
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.18.0.6
    volumes:
      - shard-2-2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard-2",
        "--bind_ip_all",
        "--port",
        "27024"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.18.0.14
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s

  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - configSrv
      - shard-1
      - shard-1-1
      - shard-1-2
      - shard-2
      - shard-2-1
      - shard-2-2
      - mongos_router
    ports:
      - 8080:8080
    networks:
      app-network:
        ipv4_address: 173.18.0.10
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.18.0.0/16

volumes:
  config-data:
  shard-1-data:
  shard-1-1-data:
  shard-1-2-data:
  shard-2-data:
  shard-2-1-data:
  shard-2-2-data: