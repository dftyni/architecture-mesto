name: mongo-sharding-repl

services:
  pymongo_api:
    container_name: pymongo_api_sharding
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    ports:
      - 8081:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"

  configSrv:
    image: mongo:latest # docker образ
    container_name: configSrv 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",  
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [
        "CMD-SHELL",
        "mongosh --port 27017 --quiet --eval 'db.runCommand({ping:1}).ok || quit(1)' || exit 1"
      ]
      interval: 5s
      start_period: 30s
      timeout: 10s
      retries: 5

  shard1-mongodb1:
    image: mongo:latest # docker образ
    container_name: shard1-mongodb1
    restart: always
    links:
      - shard1-mongodb2
      - shard1-mongodb3
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - shard1-mongodb1-data:/data/db
    command: --shardsvr --replSet shard1 --bind_ip_all --port 27017

  shard1-mongodb2:
    image: mongo:latest
    container_name: shard1-mongodb2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.5
    volumes:
      - shard1-mongodb2-data:/data/db
    command: --shardsvr --replSet shard1 --bind_ip_all --port 27017

  shard1-mongodb3:
    image: mongo:latest
    container_name: shard1-mongodb3
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.6
    volumes:
      - shard1-mongodb3-data:/data/db
    command: --shardsvr --replSet shard1 --bind_ip_all --port 27017

  shard2-mongodb1:
    image: mongo:latest
    container_name: shard2-mongodb1
    restart: always
    links:
      - shard2-mongodb2
      - shard2-mongodb3
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    volumes:
      - shard2-mongodb1-data:/data/db
    command: --shardsvr --replSet shard2 --bind_ip_all --port 27017

  shard2-mongodb2:
    image: mongo:latest
    container_name: shard2-mongodb2
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-mongodb2-data:/data/db
    command: --shardsvr --replSet shard2 --bind_ip_all --port 27017

  shard2-mongodb3:
    image: mongo:latest
    container_name: shard2-mongodb3
    restart: always
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard2-mongodb3-data:/data/db
    command: --shardsvr --replSet shard2 --bind_ip_all --port 27017

  
  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    command:
      [
        "mongos", 
        "--configdb", 
        "config_server/configSrv:27017", 
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [
        "CMD-SHELL",
        "mongosh --port 27020 --quiet --eval 'db.runCommand({ping:1}).ok || quit(1)' || exit 1"
      ]
      interval: 5s
      start_period: 30s
      timeout: 10s
      retries: 5
  
  mongos_router_2:
    image: mongo:latest
    container_name: mongos_router_2
    restart: always
    ports:
      - "27021:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    command:
      [
        "mongos", 
        "--configdb", 
        "config_server/configSrv:27017", 
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [
        "CMD-SHELL",
        "mongosh --port 27020 --quiet --eval 'db.runCommand({ping:1}).ok || quit(1)' || exit 1"
      ]
      interval: 5s
      start_period: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:

  shard1-mongodb1-data:
  shard1-mongodb2-data:
  shard1-mongodb3-data:

  shard2-mongodb1-data:
  shard2-mongodb2-data:
  shard2-mongodb3-data: